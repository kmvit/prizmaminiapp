/**
 * Telegram Web App API Utilities
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Web App API
 */

(function() {
    'use strict';

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telegram Web App API
    const script = document.createElement('script');
    script.src = 'https://telegram.org/js/telegram-web-app.js';
    document.head.appendChild(script);

    script.onload = function() {
        window.TelegramWebApp = {
            // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
            tg: window.Telegram?.WebApp,
            isBrowser: !window.Telegram || !window.Telegram.WebApp || window.Telegram.WebApp.platform === 'unknown',
            
            /**
             * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
             */
            init: function() {
                console.log('üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...');
                console.log('üåê window.Telegram:', !!window.Telegram);
                console.log('üì± this.tg:', !!this.tg);
                console.log('üñ•Ô∏è isBrowser:', this.isBrowser);
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Telegram Web App
                const isInTelegram = this.detectTelegramEnvironment();
                console.log('üì± –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Å—Ä–µ–¥–∞ Telegram:', isInTelegram);
                
                if (!this.tg || this.isBrowser) {
                    console.warn('üì± Telegram WebApp API –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ —ç—Ç–æ –±—Ä–∞—É–∑–µ—Ä');
                    console.log('üåê –†–∞–±–æ—Ç–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ');
                    return;
                }
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Web App —Ç–æ–ª—å–∫–æ –≤ Telegram
                this.tg.ready();
                
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
                this.setupTheme();
                
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫
                this.setupButtons();
                
                // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                this.getUserData();
                
                console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            },

            /**
             * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã Telegram
             * @returns {boolean} true –µ—Å–ª–∏ –≤ Telegram Web App
             */
            detectTelegramEnvironment: function() {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Telegram Web App API
                if (window.Telegram && window.Telegram.WebApp) {
                    return true;
                }
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ User-Agent
                const userAgent = navigator.userAgent.toLowerCase();
                if (userAgent.includes('telegram') || userAgent.includes('tgwebapp')) {
                    return true;
                }
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                const urlParams = new URLSearchParams(window.location.search);
                if (urlParams.has('tgWebAppData') || urlParams.has('tgWebAppStartParam')) {
                    return true;
                }
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Telegram-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
                if (document.referrer.includes('t.me') || document.referrer.includes('telegram.org')) {
                    return true;
                }
                
                return false;
            },

            /**
             * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã Telegram
             */
            setupTheme: function() {
                if (!this.tg) return;
                
                const root = document.documentElement;
                const theme = this.tg.themeParams;
                
                if (theme.bg_color) {
                    root.style.setProperty('--tg-theme-bg-color', theme.bg_color);
                }
                if (theme.text_color) {
                    root.style.setProperty('--tg-theme-text-color', theme.text_color);
                }
                if (theme.hint_color) {
                    root.style.setProperty('--tg-theme-hint-color', theme.hint_color);
                }
                if (theme.button_color) {
                    root.style.setProperty('--tg-theme-button-color', theme.button_color);
                }
                if (theme.button_text_color) {
                    root.style.setProperty('--tg-theme-button-text-color', theme.button_text_color);
                }
            },

            /**
             * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ Telegram
             */
            setupButtons: function() {
                if (!this.tg) return;
                
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
                this.tg.MainButton.setText('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å');
                this.tg.MainButton.hide();
                
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
                this.tg.BackButton.hide();
            },

            /**
             * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
             * @returns {Object|null} –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null
             */
            getUserData: function() {
                if (!this.tg) return null;
                
                const user = this.tg.initDataUnsafe?.user;
                if (user) {
                    console.log('üë§ Telegram User:', user);
                    return {
                        id: user.id,
                        first_name: user.first_name,
                        last_name: user.last_name,
                        username: user.username,
                        language_code: user.language_code
                    };
                }
                return null;
            },

            /**
             * –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
             * @param {string} text - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
             * @param {Function} callback - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
             */
            showMainButton: function(text, callback) {
                if (!this.tg) return;
                
                text = text || '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
                this.tg.MainButton.setText(text);
                this.tg.MainButton.show();
                
                if (callback) {
                    this.tg.MainButton.onClick(callback);
                }
            },

            /**
             * –°–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
             */
            hideMainButton: function() {
                if (!this.tg) return;
                this.tg.MainButton.hide();
            },

            /**
             * –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
             * @param {Function} callback - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
             */
            showBackButton: function(callback) {
                if (!this.tg || !this.tg.BackButton) return;
                
                try {
                    this.tg.BackButton.show();
                    
                    if (callback) {
                        this.tg.BackButton.onClick(callback);
                    } else {
                        this.tg.BackButton.onClick(function() {
                            window.history.back();
                        });
                    }
                } catch (error) {
                    console.log('‚¨ÖÔ∏è BackButton –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
                }
            },

            /**
             * –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
             */
            hideBackButton: function() {
                if (!this.tg || !this.tg.BackButton) return;
                try {
                    this.tg.BackButton.hide();
                } catch (error) {
                    console.log('‚¨ÖÔ∏è BackButton –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
                }
            },

            /**
             * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Telegram
             * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
             */
            sendData: function(data) {
                if (!this.tg) return;
                this.tg.sendData(JSON.stringify(data));
            },

            /**
             * –ü–æ–∫–∞–∑–∞—Ç—å –∞–ª–µ—Ä—Ç
             * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
             */
            showAlert: function(message) {
                // –í –±—Ä–∞—É–∑–µ—Ä–µ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π alert
                if (this.isBrowser) {
                    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º alert');
                    alert(message);
                    return;
                }
                
                // –í Telegram –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω—ã–π API
                try {
                    if (this.tg && this.tg.showAlert && typeof this.tg.showAlert === 'function') {
                        this.tg.showAlert(message);
                    } else {
                        console.log('üì± Telegram showAlert –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, fallback –Ω–∞ alert');
                        alert(message);
                    }
                } catch (error) {
                    console.warn('üì± Fallback to browser alert:', error);
                    alert(message);
                }
            },

            /**
             * –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
             * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
             * @param {Function} callback - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
             */
            showConfirm: function(message, callback) {
                if (!this.tg) {
                    if (confirm(message)) {
                        callback(true);
                    } else {
                        callback(false);
                    }
                    return;
                }
                this.tg.showConfirm(message, callback);
            },

            /**
             * –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
             * @param {string} type - –¢–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ ('light', 'medium', 'heavy')
             */
            hapticFeedback: function(type) {
                // –í –±—Ä–∞—É–∑–µ—Ä–µ —Ç–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                if (this.isBrowser) {
                    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º: —Ç–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
                    return;
                }
                
                try {
                    if (!this.tg || !this.tg.HapticFeedback || typeof this.tg.HapticFeedback.impactOccurred !== 'function') {
                        console.log('üì± –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ Telegram');
                        return;
                    }
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è WebappHapticImpactStyleInvalid
                    const validTypes = ['light', 'medium', 'heavy'];
                    const validType = validTypes.includes(type) ? type : 'medium';
                    this.tg.HapticFeedback.impactOccurred(validType);
                } catch (e) {
                    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Ç–∏–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å:', e);
                }
            },

            /**
             * –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
             * @returns {number} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
             */
            getUserId: function() {
                if (this.tg?.initDataUnsafe?.user?.id) {
                    return this.tg.initDataUnsafe.user.id;
                }
                const testId = localStorage.getItem('test_telegram_id');
                return testId ? parseInt(testId) : 123456789;
            },

            /**
             * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API
             * @param {Error} error - –û—à–∏–±–∫–∞
             * @param {string} defaultMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
             */
            handleError: function(error, defaultMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞') {
                console.error('‚ùå API Error:', error);
                const message = error?.message || error?.error || error?.detail || defaultMessage;
                
                // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ showAlert –±–µ–∑ –ø–∞–¥–µ–Ω–∏—è
                try {
                    this.showAlert(message);
                } catch (e) {
                    console.error('–û—à–∏–±–∫–∞ –≤ showAlert, –∏—Å–ø–æ–ª—å–∑—É–µ–º console.error:', e);
                    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', message);
                }
            },

            /**
             * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ Telegram —Å—Ä–µ–¥–µ
             * @returns {boolean} true –µ—Å–ª–∏ –≤ Telegram Web App
             */
            isInTelegramWebApp: function() {
                return !!(window.Telegram?.WebApp || window.TelegramWebApp?.tg);
            },

            /**
             * –†–∞—Å—à–∏—Ä–∏—Ç—å viewport
             */
            expandViewport: function() {
                if (!this.tg) return;
                this.tg.expand();
            },

            /**
             * –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
             */
            close: function() {
                if (!this.tg) {
                    window.close();
                    return;
                }
                this.tg.close();
            },

            /**
             * –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –≤ Telegram
             * @param {string} url - URL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
             */
            openTelegramLink: function(url) {
                if (!this.tg) {
                    window.open(url, '_blank');
                    return;
                }
                this.tg.openTelegramLink(url);
            },

            /**
             * –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
             * @param {string} url - URL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
             */
            openLink: function(url) {
                if (!this.tg) {
                    window.open(url, '_blank');
                    return;
                }
                this.tg.openLink(url);
            },

            /**
             * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ Telegram
             * @returns {boolean} true –µ—Å–ª–∏ –≤ Telegram
             */
            isInTelegram: function() {
                return !!this.tg;
            }
        };

        // –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        window.TelegramWebApp.init();
    };
})(); 