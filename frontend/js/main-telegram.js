'use strict';
$(function() {
    // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –∏–∑ main.js
    const closedStyle = {
        borderRadius: "25px",
        borderBottomLeftRadius: "25px",
        borderBottomRightRadius: "25px"
    };
    const openedStyle = {
        borderRadius: "25px 25px 0 0",
        borderBottomLeftRadius: "0",
        borderBottomRightRadius: "0"
    };

    let selectSelected = $(".select-selected");
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    $(".select-selected").css(closedStyle);

    $(".select-selected").click(function(e) {
        e.stopPropagation();
        const isOpen = $("#selectOptions").hasClass("show");

        $("#selectOptions").toggleClass("show");
        $(".custom-arrow").css("transform", isOpen ? "rotate(0)" : "rotate(180deg)");
        $(".select-selected").css(isOpen ? closedStyle : openedStyle);

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        if (window.TelegramWebApp) {
            window.TelegramWebApp.hapticFeedback('light');
        }
    });

    $(".option").click(function() {
        const value = $(this).data("value");
        const text = $(this).text();

        $(".select-placeholder").text(text);
        $("#genderInput").val(value);

        $("#selectOptions").removeClass("show");
        $(".custom-arrow").css("transform", "rotate(0)");
        $(".select-selected").css(closedStyle);

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        if (window.TelegramWebApp) {
            window.TelegramWebApp.hapticFeedback('medium');
        }
    });

    $(document).click(function() {
        if ($("#selectOptions").hasClass("show")) {
            $("#selectOptions").removeClass("show");
            $(".custom-arrow").css("transform", "rotate(0)");
            $(".select-selected").css(closedStyle);
        }
    });

    $("#answers-acc").accordion({
        collapsible: true,
        active: false,
    });

    const textarea = document.querySelector('.question-area');
    const writeIcon = document.querySelector('.write-icon');

    if (textarea && writeIcon) {
        textarea.addEventListener('focus', () => {
            writeIcon.style.visibility = 'hidden';
        });
        textarea.addEventListener('blur', () => {
            writeIcon.style.visibility = 'visible';
        });
    }

    // Telegram Web App —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∫–æ–¥ - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    function initTelegramApp() {
        console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TelegramApp...');
        console.log('üì± window.TelegramWebApp:', !!window.TelegramWebApp);
        console.log('üì± window.Telegram:', !!window.Telegram);
        
        if (window.TelegramWebApp && window.TelegramWebApp.tg) {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
            const currentPage = getCurrentPage();
            console.log('üéØ Current page detected:', currentPage);
            console.log('üîó Current URL:', window.location.href);
            
            switch(currentPage) {
                case 'index':
                    initIndexPage();
                    break;
                case 'steps':
                    initStepsPage();
                    break;
                case 'login':
                    initLoginPage();
                    break;
                case 'question':
                    console.log('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º initQuestionPage...');
                    initQuestionPage();
                    break;
                case 'loading':
                    initLoadingPage();
                    break;
                case 'answers':
                    initAnswersPage();
                    break;
                case 'price':
                    initPricePage();
                    break;
                case 'payment':
                    initPaymentPage();
                    break;
                case 'download':
                    initDownloadPage();
                    break;
            }
        } else {
            console.log('‚è≥ TelegramWebApp not ready, retrying...');
            setTimeout(initTelegramApp, 100);
        }
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Telegram API
    function safeMainButton(action, ...args) {
        try {
            if (window.TelegramWebApp && window.TelegramWebApp.MainButton) {
                return window.TelegramWebApp.MainButton[action](...args);
            } else {
                console.log(`‚ùå MainButton.${action} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
                return false;
            }
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ MainButton.${action}:`, error);
            return false;
        }
    }
    
    function safeBackButton(action, ...args) {
        try {
            if (window.TelegramWebApp && window.TelegramWebApp.BackButton) {
                return window.TelegramWebApp.BackButton[action](...args);
            } else {
                console.log(`‚ùå BackButton.${action} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
                return false;
            }
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ BackButton.${action}:`, error);
            return false;
        }
    }

    // –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTelegramApp);
    } else {
        initTelegramApp();
    }

    function getCurrentPage() {
        const path = window.location.pathname;
        const filename = path.split('/').pop().split('.')[0];
        return filename || 'index';
    }

    function initIndexPage() {
        // –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å viewport
        if (window.TelegramWebApp && window.TelegramWebApp.expandViewport) {
            window.TelegramWebApp.expandViewport();
        }
        
        // –°–∫—Ä—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        safeMainButton('hide');
        safeBackButton('hide');

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑"
        $('.button[href="steps.html"]').click(function(e) {
            e.preventDefault();
            window.TelegramWebApp.hapticFeedback('medium');
            window.location.href = 'steps.html';
        });
    }

    function initStepsPage() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        try {
            if (window.TelegramWebApp.BackButton) {
                window.TelegramWebApp.BackButton.show();
            }
        } catch (error) {
            console.log('‚¨ÖÔ∏è BackButton –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
        }
        
        // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —à–∞–≥–æ–≤
        $('.button').click(function() {
            window.TelegramWebApp.hapticFeedback('medium');
        });
    }

    function initLoginPage() {
        console.log('üë§ =============================================================');
        console.log('üë§ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶–´ –õ–û–ì–ò–ù–ê');
        console.log('üë§ =============================================================');
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        safeBackButton('show');
        
        // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
        const userData = window.TelegramWebApp.initDataUnsafe || {};
        const telegramId = window.TelegramWebApp.getUserId();
        
        console.log('üë§ Telegram ID:', telegramId);
        console.log('üë§ User Data:', userData);
        console.log('üë§ window.TelegramWebApp –¥–æ—Å—Ç—É–ø–µ–Ω:', !!window.TelegramWebApp);
        console.log('üë§ window.TelegramWebApp.getUserId –¥–æ—Å—Ç—É–ø–µ–Ω:', !!window.TelegramWebApp?.getUserId);
        
        // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        async function loadUserProfile() {
            try {
                console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
                console.log('URL –∑–∞–ø—Ä–æ—Å–∞:', `/api/user/${telegramId}/profile`);
                
                const response = await fetch(`/api/user/${telegramId}/profile`);
                
                if (response.ok) {
                    const result = await response.json();
                    console.log('–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω:', result);
                    
                    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ
                    if (result.user) {
                        if (result.user.name) {
                            $('#nameInput').val(result.user.name);
                        } else if (userData.user?.first_name) {
                            // –ï—Å–ª–∏ –∏–º–µ–Ω–∏ –Ω–µ—Ç –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑ Telegram
                            $('#nameInput').val(userData.user.first_name);
                        }
                        
                        if (result.user.age) {
                            $('#ageInput').val(result.user.age);
                        }
                        
                        if (result.user.gender) {
                            $('#genderInput').val(result.user.gender);
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª–∞
                            const genderText = result.user.gender === 'male' ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π';
                            $('.select-placeholder').text(genderText);
                        }
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏
                        checkFormCompleteness();
                    }
                } else {
                    console.log('–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);
                    const errorText = await response.text();
                    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
                    
                    // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –∏–∑ Telegram
                    if (userData.user?.first_name) {
                        $('#nameInput').val(userData.user.first_name);
                    }
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', error);
                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram
                if (userData.user?.first_name) {
                    $('#nameInput').val(userData.user.first_name);
                }
            }
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        loadUserProfile();

        // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        async function saveProfile(name, age, gender) {
            try {
                console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', { name, age, gender, telegramId });
                
                const response = await fetch(`/api/user/${telegramId}/profile`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: name,
                        age: parseInt(age),
                        gender: gender
                    })
                });

                if (!response.ok) {
                    const errorText = await response.text();
                    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
                    throw new Error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
                }

                const result = await response.json();
                console.log('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', result);
                return true;
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
                if (window.TelegramWebApp && window.TelegramWebApp.showAlert) {
                    window.TelegramWebApp.showAlert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                } else {
                    alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                }
                return false;
            }
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
        let mainButtonHandlerRegistered = false;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" (–∫–∞–∫ —á–µ—Ä–µ–∑ Telegram –∫–Ω–æ–ø–∫—É, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ HTML –∫–Ω–æ–ø–∫—É)
        async function handleContinue() {
            const name = $('#nameInput').val().trim();
            const age = $('#ageInput').val().trim();
            const gender = $('#genderInput').val();

            if (!name || !age || !gender) {
                window.TelegramWebApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                return;
            }

            if (age < 1 || age > 120) {
                window.TelegramWebApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç');
                return;
            }

            // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            safeMainButton('setText', '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
            safeMainButton('show');
            
            // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
            const saved = await saveProfile(name, age, gender);
            
            if (saved) {
                // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                localStorage.setItem('userProfile', JSON.stringify({
                    name: name,
                    age: age,
                    gender: gender,
                    telegramUser: userData
                }));

                window.location.href = 'question.html';
            } else {
                // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
                safeMainButton('setText', '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å');
                safeMainButton('show');
            }
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
        if (!mainButtonHandlerRegistered) {
            try {
                if (window.TelegramWebApp && window.TelegramWebApp.onEvent) {
                    window.TelegramWebApp.onEvent('mainButtonClicked', handleContinue);
                    console.log('‚úÖ MainButton –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
                } else if (window.TelegramWebApp && window.TelegramWebApp.MainButton && window.TelegramWebApp.MainButton.onClick) {
                    window.TelegramWebApp.MainButton.onClick(handleContinue);
                    console.log('‚úÖ MainButton onClick –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
                } else {
                    console.log('‚ùå MainButton –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è');
                }
                mainButtonHandlerRegistered = true;
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ MainButton –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞:', error);
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ HTML –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
        $('#continueButton').off('click').on('click', function(e) {
            e.preventDefault();
            handleContinue();
        });

        // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã
        function checkFormCompleteness() {
            const name = $('#nameInput').val().trim();
            const age = $('#ageInput').val().trim();
            const gender = $('#genderInput').val();
            
            if (name && age && gender) {
                safeMainButton('setText', '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å');
                safeMainButton('show');
            } else {
                safeMainButton('hide');
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
        $('#nameInput, #ageInput, #genderInput').on('input change', checkFormCompleteness);
    }

    function initQuestionPage() {
        console.log('üéØ =============================================================');
        console.log('üéØ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶–´ –í–û–ü–†–û–°–û–í');
        console.log('üéØ =============================================================');
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        console.log('‚¨ÖÔ∏è –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å BackButton');
        safeBackButton('show');
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
        let currentTelegramId = null;
        let currentQuestionData = null;
        const API_BASE_URL = window.location.origin;
        console.log('üåê API_BASE_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤:', API_BASE_URL);
        
        // –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API
        function getTelegramUserId() {
            const userId = window.TelegramWebApp.getUserId();
            console.log('üë§ getTelegramUserId() –≤–µ—Ä–Ω—É–ª:', userId);
            return userId;
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        async function loadCurrentQuestion() {
            try {
                currentTelegramId = getTelegramUserId();
                console.log('üì° Loading question for user:', currentTelegramId);
                console.log('üåê API_BASE_URL:', API_BASE_URL);
                
                if (!currentTelegramId) {
                    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                }
                
                const requestUrl = `${API_BASE_URL}/api/user/${currentTelegramId}/current-question`;
                console.log('üì° Request URL:', requestUrl);
                
                const response = await fetch(requestUrl);
                console.log('üì° Response status:', response.status);
                
                const data = await response.json();
                console.log('üì° Response data:', data);
                
                if (response.ok) {
                    currentQuestionData = data;
                    displayQuestion(data);
                    console.log('‚úÖ Question loaded successfully');
                } else {
                    console.error('‚ùå Error loading question:', data.error);
                    $('#questionText').text('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–∞: ' + (data.error || data.detail || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                }
            } catch (error) {
                console.error('üí• Exception loading question:', error);
                $('#questionText').text('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–∞: ' + error.message);
            }
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
        function displayQuestion(data) {
            const { question, progress, user } = data;
            
            $('#questionText').text(question.text);
            $('.current-question').text(progress.current);
            $('.question-count').text(progress.total);
            
            const textarea = $('#questionArea');
            textarea.val('');
            textarea.attr('maxlength', question.max_length || 1000);
            
            if (!user.is_paid && question.type === 'paid') {
                $('#questionText').append('<br><small style="color: #ff6b6b;">üíé –≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏</small>');
            }
            
            console.log('Question loaded:', question);
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        async function submitAnswer() {
            const answerText = $('#questionArea').val().trim();
            
            if (!answerText) {
                window.TelegramWebApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å');
                return;
            }
            
            if (!currentTelegramId) {
                window.TelegramWebApp.showAlert('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                return;
            }
            
            // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            window.TelegramWebApp.hapticFeedback('medium');
            
            try {
                const response = await fetch(`${API_BASE_URL}/api/user/${currentTelegramId}/answer`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        text_answer: answerText,
                        answer_type: 'text'
                    })
                });
                
                const responseText = await response.text();
                let data;
                try {
                    data = JSON.parse(responseText);
                } catch (e) {
                    throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON: ' + responseText);
                }
                
                if (response.ok) {
                    window.TelegramWebApp.hapticFeedback('light');
                    
                    if (data.status === 'next_question') {
                        currentQuestionData = {
                            question: data.next_question,
                            progress: data.progress,
                            user: currentQuestionData.user
                        };
                        
                        displayQuestion(currentQuestionData);
                        $('#questionArea').val('');
                        showSuccessMessage('–û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
                        
                    } else if (data.status === 'test_completed') {
                        const message = data.message || '–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!';
                        window.TelegramWebApp.showAlert(message);
                        setTimeout(() => {
                            window.location.href = 'download.html';
                        }, 1500);
                    }
                } else {
                    window.TelegramWebApp.handleError(data, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞');
                }
            } catch (error) {
                window.TelegramWebApp.handleError(error, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞');
            }
        }
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        function showSuccessMessage(message) {
            const successDiv = $('<div>')
                .text(message)
                .css({
                    position: 'fixed',
                    top: '20px',
                    left: '50%',
                    transform: 'translateX(-50%)',
                    background: '#4CAF50',
                    color: 'white',
                    padding: '10px 20px',
                    borderRadius: '5px',
                    zIndex: 1000
                });
            
            $('body').append(successDiv);
            setTimeout(() => {
                successDiv.fadeOut(() => successDiv.remove());
            }, 2000);
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MainButton
        console.log('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MainButton...');
        console.log('üîß window.TelegramWebApp:', !!window.TelegramWebApp);
        console.log('üîß window.TelegramWebApp.MainButton:', !!window.TelegramWebApp?.MainButton);
        
        try {
            if (window.TelegramWebApp && window.TelegramWebApp.MainButton) {
                window.TelegramWebApp.MainButton.setText('–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å');
                window.TelegramWebApp.MainButton.show();
                window.TelegramWebApp.MainButton.onClick(submitAnswer);
                console.log('‚úÖ MainButton –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            } else {
                console.log('‚ùå MainButton –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML –∫–Ω–æ–ø–∫—É');
                // Fallback –Ω–∞ HTML –∫–Ω–æ–ø–∫—É
                $('#nextButton').show().off('click').on('click', submitAnswer);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MainButton:', error);
            // Fallback –Ω–∞ HTML –∫–Ω–æ–ø–∫—É
            $('#nextButton').show().off('click').on('click', submitAnswer);
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –≤ textarea
        $('#questionArea').on('keydown', function(e) {
            if (e.ctrlKey && e.keyCode === 13) {
                submitAnswer();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ - —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç  
        $('.micro-button').click(function() {
            window.TelegramWebApp.hapticFeedback('medium');
            startVoiceTranscription();
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º loadCurrentQuestion...');
        loadCurrentQuestion();
        
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (!localStorage.getItem('test_telegram_id')) {
            localStorage.setItem('test_telegram_id', '123456789');
            console.log('üíæ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π ID: 123456789');
        }
        
        console.log('üéØ ============ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê ============');
        
        function startVoiceTranscription() {
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Telegram
            if (window.TelegramWebApp && window.TelegramWebApp.platform !== 'unknown') {
                // –í Telegram –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º
                window.TelegramWebApp.showAlert('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ Telegram –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞');
                
                // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞, —á—Ç–æ–±—ã –ø–æ—è–≤–∏–ª–∞—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º
                $('#questionArea').focus();
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                showVoiceInputHint();
                return;
            }
            
            // Fallback: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–µ—á–µ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {
                window.TelegramWebApp.showAlert('–†–µ—á–µ–≤–æ–π –≤–≤–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
                return;
            }
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º Web Speech API –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            const recognition = new SpeechRecognition();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
            recognition.lang = 'ru-RU';
            recognition.continuous = false;
            recognition.interimResults = true;
            recognition.maxAlternatives = 1;
            
            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            $('.micro-button').addClass('recording');
            $('.micro-button img').attr('src', './images/pause-icon.svg');
            showTranscriptionIndicator();
            
            recognition.onstart = function() {
                console.log('–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –Ω–∞—á–∞—Ç–æ');
            };
            
            recognition.onresult = function(event) {
                let finalTranscript = '';
                let interimTranscript = '';
                
                for (let i = event.resultIndex; i < event.results.length; i++) {
                    const transcript = event.results[i][0].transcript;
                    
                    if (event.results[i].isFinal) {
                        finalTranscript += transcript;
                    } else {
                        interimTranscript += transcript;
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
                const currentText = $('#questionArea').val();
                const newText = currentText + ' ' + finalTranscript;
                $('#questionArea').val(newText.trim());
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if (interimTranscript) {
                    updateTranscriptionIndicator('üé§ –°–ª—ã—à—É: ' + interimTranscript);
                }
            };
            
            recognition.onerror = function(event) {
                console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏:', event.error);
                stopTranscription();
                
                let errorMessage = '–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏';
                switch(event.error) {
                    case 'network':
                        errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
                        break;
                    case 'not-allowed':
                        errorMessage = '–î–æ—Å—Ç—É–ø –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É –∑–∞–ø—Ä–µ—â–µ–Ω. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞';
                        break;
                    case 'no-speech':
                        errorMessage = '–†–µ—á—å –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑';
                        break;
                }
                
                window.TelegramWebApp.showAlert(errorMessage);
            };
            
            recognition.onend = function() {
                console.log('–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
                stopTranscription();
            };
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
            try {
                recognition.start();
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:', error);
                stopTranscription();
                window.TelegramWebApp.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏');
            }
        }
        
        function stopTranscription() {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–∑—É–∞–ª
            $('.micro-button').removeClass('recording');
            $('.micro-button img').attr('src', './images/micro-icon.svg');
            hideTranscriptionIndicator();
        }
        
        function showTranscriptionIndicator() {
            const indicator = $('<div class="transcription-indicator">üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ...</div>');
            indicator.css({
                position: 'fixed',
                top: '20px',
                left: '50%',
                transform: 'translateX(-50%)',
                background: '#4CAF50',
                color: 'white',
                padding: '8px 16px',
                borderRadius: '20px',
                fontSize: '14px',
                fontWeight: 'bold',
                zIndex: 1000,
                animation: 'pulse 1s infinite'
            });
            
            $('body').append(indicator);
        }
        
        function updateTranscriptionIndicator(text) {
            $('.transcription-indicator').text(text);
        }
        
        function hideTranscriptionIndicator() {
            $('.transcription-indicator').remove();
        }
        
        function showVoiceInputHint() {
            const hint = $('<div class="voice-hint">üé§ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ Telegram<br>üìù –í–∞—à–∞ —Ä–µ—á—å –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ —Ç–µ–∫—Å—Ç</div>');
            hint.css({
                position: 'fixed',
                bottom: '120px',
                left: '50%',
                transform: 'translateX(-50%)',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                color: 'white',
                padding: '12px 20px',
                borderRadius: '25px',
                fontSize: '14px',
                fontWeight: '500',
                zIndex: 1000,
                maxWidth: '320px',
                textAlign: 'center',
                lineHeight: '1.4',
                boxShadow: '0 4px 15px rgba(0,0,0,0.2)',
                border: '2px solid rgba(255,255,255,0.2)'
            });
            
            $('body').append(hint);
            
            // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —á–µ—Ä–µ–∑ 6 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                hint.fadeOut(1000, () => hint.remove());
            }, 6000);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            hint.css('opacity', '0').animate({ opacity: 1 }, 500);
        }
    }

    function initLoadingPage() {
        // –°–∫—Ä—ã—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        window.TelegramWebApp.MainButton.hide();
        window.TelegramWebApp.BackButton.hide();

        // –ü–æ–ª—É—á–∞–µ–º Telegram ID –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        const telegramId = window.TelegramWebApp.getUserId();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        async function checkUserStatusAndGenerateReport() {
            try {
                // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                const progressResponse = await fetch(`/api/user/${telegramId}/progress`);
                const progressData = await progressResponse.json();
                
                if (progressResponse.ok && progressData.user.test_completed) {
                    // –ï—Å–ª–∏ —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é
                    setTimeout(() => {
                        window.location.href = 'download.html';
                    }, 3000);
                } else {
                    // –ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤), –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–∞—Ä–∏—Ñ–∞–º
                    setTimeout(() => {
                        window.location.href = 'price.html';
                    }, 3000);
                }
            } catch (error) {
                console.error('Error checking user status:', error);
                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–∞—Ä–∏—Ñ–∞–º
                setTimeout(() => {
                    window.location.href = 'price.html';
                }, 3000);
            }
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        checkUserStatusAndGenerateReport();
    }

    function initAnswersPage() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç"
        window.TelegramWebApp.onEvent('mainButtonClicked', function() {
            window.location.href = 'download.html';
        });
        window.TelegramWebApp.MainButton.setText('–°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç');
        window.TelegramWebApp.MainButton.show();
    }

    function initPricePage() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        try {
            if (window.TelegramWebApp.BackButton) {
                window.TelegramWebApp.BackButton.show();
            }
        } catch (error) {
            console.log('‚¨ÖÔ∏è BackButton –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
        }

        // –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const telegramId = window.TelegramWebApp.getUserId();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
        $('.price-plan-action .button').click(async function(e) {
            e.preventDefault();
            window.TelegramWebApp.hapticFeedback('medium');
            
            const planType = $(this).closest('.free-price-plan').length > 0 ? 'free' : 'paid';
            
            if (planType === 'free') {
                // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
                try {
                    const progressResponse = await fetch(`/api/user/${telegramId}/progress`);
                    const progressData = await progressResponse.json();
                    
                    if (progressResponse.ok) {
                        if (progressData.progress.answered >= 15) {
                            // –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
                            window.location.href = 'download.html';
                        } else {
                            // –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤
                            window.TelegramWebApp.showAlert(`–î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ 15 –≤–æ–ø—Ä–æ—Å–æ–≤. –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ ${progressData.progress.answered}.`);
                            setTimeout(() => {
                                window.location.href = 'question.html';
                            }, 2000);
                        }
                    } else {
                        window.TelegramWebApp.showAlert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                    }
                } catch (error) {
                    console.error('Error checking user progress:', error);
                    window.TelegramWebApp.showAlert('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞');
                }
            } else {
                // –ü–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω - –∫ –æ–ø–ª–∞—Ç–µ
                window.location.href = 'complete-payment.html';
            }
        });
    }

    function initPaymentPage() {
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        try {
            if (window.TelegramWebApp.BackButton) {
                window.TelegramWebApp.BackButton.show();
            }
        } catch (error) {
            console.log('‚¨ÖÔ∏è BackButton –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error);
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        $('.button').click(function() {
            window.TelegramWebApp.hapticFeedback('light');
            window.location.href = 'answers.html';
        });
    }

    function initDownloadPage() {
        // –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const telegramId = window.TelegramWebApp.getUserId();

        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
        window.TelegramWebApp.onEvent('mainButtonClicked', function() {
            // –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            window.TelegramWebApp.close();
        });
        window.TelegramWebApp.MainButton.setText('–ó–∞–≤–µ—Ä—à–∏—Ç—å');
        window.TelegramWebApp.MainButton.show();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –¥–ª—è Telegram Web App)
        $('.button-download.telegram-download').click(async function() {
            window.TelegramWebApp.hapticFeedback('medium');
            
            console.log('üîΩ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...');
            console.log('üìä Telegram ID:', telegramId);
            console.log('üåê Telegram Web App –≤–µ—Ä—Å–∏—è:', window.TelegramWebApp.version);
            
            const reportUrl = `${window.location.origin}/api/download/report/${telegramId}`;
            console.log('üìÅ URL –æ—Ç—á–µ—Ç–∞:', reportUrl);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const $button = $(this);
            const originalText = $button.find('span').text();
            $button.find('span').text('–°–∫–∞—á–∏–≤–∞–µ–º...');
            $button.prop('disabled', true);
            
            try {
                // –ù–û–í–´–ô –ú–ï–¢–û–î: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ fetch + blob –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
                console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–ª—è Telegram...');
                
                // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                const response = await fetch(reportUrl + '?download=1&source=telegram&t=' + Date.now());
                
                if (!response.ok) {
                    throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
                }
                
                console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å–æ–∑–¥–∞–µ–º blob...');
                
                // –°–æ–∑–¥–∞–µ–º blob –∏–∑ –æ—Ç–≤–µ—Ç–∞
                const blob = await response.blob();
                console.log('üìÑ Blob —Å–æ–∑–¥–∞–Ω, —Ä–∞–∑–º–µ—Ä:', blob.size, '–±–∞–π—Ç');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ Telegram Web App download API
                if (window.TelegramWebApp.downloadFile && 
                    window.TelegramWebApp.version && 
                    parseFloat(window.TelegramWebApp.version) >= 7.0) {
                    
                    console.log('üì± –ü—Ä–æ–±—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π Telegram download API...');
                    
                    try {
                        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL –¥–ª—è blob
                        const blobUrl = window.URL.createObjectURL(blob);
                        
                        window.TelegramWebApp.downloadFile({
                            url: blobUrl,
                            file_name: `prizma-report-${telegramId}.pdf`
                        }, function(success) {
                            console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ API:', success);
                            window.URL.revokeObjectURL(blobUrl);
                            
                            if (success) {
                                window.TelegramWebApp.hapticFeedback('light');
                                window.TelegramWebApp.showAlert('‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!\n\nüìÑ –ù–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª prizma-report-' + telegramId + '.pdf –≤ –∑–∞–≥—Ä—É–∑–∫–∞—Ö –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.');
                            } else {
                                // Fallback –∫ –æ–±—ã—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É
                                downloadViaBlob(blob);
                            }
                        });
                        
                        return; // –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –Ω–∞—Ç–∏–≤–Ω—ã–π API –∑–∞–ø—É—â–µ–Ω
                        
                    } catch (nativeError) {
                        console.error('üì± –û—à–∏–±–∫–∞ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ API:', nativeError);
                        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫ fallback –º–µ—Ç–æ–¥—É
                    }
                }
                
                // Fallback: –æ–±—ã—á–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ blob –∏ —Å—Å—ã–ª–∫—É
                downloadViaBlob(blob);
                
                function downloadViaBlob(blob) {
                    console.log('üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ blob...');
                    
                    try {
                        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `prizma-report-${telegramId}.pdf`;
                        a.style.display = 'none';
                        document.body.appendChild(a);
                        
                        console.log('‚¨áÔ∏è –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...');
                        a.click();
                        
                        // –û—á–∏—Å—Ç–∫–∞
                        setTimeout(() => {
                            window.URL.revokeObjectURL(url);
                            if (a.parentNode) {
                                a.parentNode.removeChild(a);
                            }
                        }, 100);
                        
                        window.TelegramWebApp.hapticFeedback('light');
                        window.TelegramWebApp.showAlert('üìÅ –û—Ç—á–µ—Ç —Å–∫–∞—á–∞–Ω!\n\n' +
                            'üí° –ù–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª –≤ –∑–∞–≥—Ä—É–∑–∫–∞—Ö –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n' +
                            'üìÑ prizma-report-' + telegramId + '.pdf\n\n' +
                            '‚ùì –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –ø–æ—è–≤–∏–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:\n' +
                            '1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞–ø–∫—É "–ó–∞–≥—Ä—É–∑–∫–∏"\n' +
                            '2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏\n' +
                            '3. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä');
                        
                        console.log('‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —á–µ—Ä–µ–∑ blob');
                        
                    } catch (blobError) {
                        console.error('üîó –û—à–∏–±–∫–∞ blob —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', blobError);
                        
                        // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback - openLink
                        const directUrl = reportUrl + '?download=1&fallback=1&t=' + Date.now();
                        console.log('üåê –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback: openLink ->', directUrl);
                        
                        if (window.TelegramWebApp.openLink) {
                            window.TelegramWebApp.openLink(directUrl);
                            window.TelegramWebApp.showAlert('üìÅ –û—Ç—á–µ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ!\n\n' +
                                'üí° –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å" –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫..."\n\n' +
                                'üìÑ –ò–º—è —Ñ–∞–π–ª–∞: prizma-report-' + telegramId + '.pdf');
                        } else {
                            throw new Error('–í—Å–µ –º–µ—Ç–æ–¥—ã —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
                        }
                    }
                }
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞:', error);
                
                window.TelegramWebApp.showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞:\n\n' +
                    error.message + '\n\n' +
                    'üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n' +
                    '1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É\n' +
                    '2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n' +
                    '3. –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n' +
                    '4. –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É');
            } finally {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                setTimeout(() => {
                    $button.find('span').text(originalText);
                    $button.prop('disabled', false);
                }, 2000);
            }
            
            console.log('üîΩ –ó–∞–≤–µ—Ä—à–∏–ª–∏ –ø–æ–ø—ã—Ç–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞');
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        async function checkUserStatus() {
            try {
                const response = await fetch(`/api/user/${telegramId}/progress`);
                const data = await response.json();
                
                if (response.ok) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    if ($('.answers-count').length) {
                        $('.answers-count').text(data.progress.answered);
                    }
                    
                    if (!data.user.test_completed) {
                        // –ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                        window.TelegramWebApp.showAlert('–í–Ω–∏–º–∞–Ω–∏–µ: —Ç–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é');
                    }
                }
            } catch (error) {
                console.error('Error checking user status:', error);
            }
        }
        
        checkUserStatus();
    }
}); 