#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç—á–µ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from bot.services.pdf_service import PDFGenerator
from bot.database.models import User
from datetime import datetime


def test_title_page_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ PDF
    pdf_generator = PDFGenerator()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user = User(
        telegram_id=123456789,
        username="test_user",
        first_name="–ò–≤–∞–Ω",
        last_name="–ü–µ—Ç—Ä–æ–≤"
    )
    
    # –ü—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    template_path = Path("template_pdf_premium/block-1/title.pdf")
    
    if not template_path.exists():
        print(f"‚ùå –®–∞–±–ª–æ–Ω —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
        print("üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ template_pdf_premium/block-1/:")
        block1_dir = Path("template_pdf_premium/block-1")
        if block1_dir.exists():
            for file in block1_dir.iterdir():
                print(f"   - {file.name}")
        return False
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–∏—Ç—É–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print(f"üìÑ –°–æ–∑–¥–∞–µ–º —Ç–∏—Ç—É–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user.first_name} {test_user.last_name}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        completion_date = datetime.utcnow().strftime("%d.%m.%Y")
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é —Ç–∏—Ç—É–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        title_buffer = pdf_generator.create_custom_title_page(
            template_path=template_path,
            user_name=f"{test_user.first_name} {test_user.last_name}",
            completion_date=completion_date
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–∞–ø–∫—É tests
        output_path = Path("tests") / "generated_title_page.pdf"
        
        with open(output_path, 'wb') as f:
            f.write(title_buffer.getvalue())
        
        print(f"‚úÖ –¢–∏—Ç—É–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: {output_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {output_path.stat().st_size} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
        if output_path.stat().st_size > 1000:  # –ú–∏–Ω–∏–º—É–º 1KB
            print("‚úÖ –§–∞–π–ª –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä")
            return True
        else:
            print("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False


def test_different_user_names():
    """–¢–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    pdf_generator = PDFGenerator()
    template_path = Path("template_pdf_premium/block-1/title.pdf")
    
    if not template_path.exists():
        print("‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return
    
    test_cases = [
        {
            "name": "–ü–æ–ª–Ω–æ–µ –∏–º—è",
            "user": User(telegram_id=1, first_name="–ê–Ω–Ω–∞", last_name="–°–∏–¥–æ—Ä–æ–≤–∞", username="anna_s")
        },
        {
            "name": "–¢–æ–ª—å–∫–æ –∏–º—è",
            "user": User(telegram_id=2, first_name="–ú–∏—Ö–∞–∏–ª", username="mike")
        },
        {
            "name": "–¢–æ–ª—å–∫–æ username",
            "user": User(telegram_id=3, username="john_doe")
        },
        {
            "name": "–ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ",
            "user": User(telegram_id=4)
        }
    ]
    
    completion_date = datetime.utcnow().strftime("%d.%m.%Y")
    
    for i, test_case in enumerate(test_cases, 1):
        user = test_case["user"]
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user.first_name and user.last_name:
            user_name = f"{user.first_name} {user.last_name}"
        elif user.first_name:
            user_name = user.first_name
        elif user.username:
            user_name = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username}"
        else:
            user_name = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.telegram_id}"
        
        try:
            title_buffer = pdf_generator.create_custom_title_page(
                template_path=template_path,
                user_name=user_name,
                completion_date=completion_date
            )
            
            output_path = Path("tests") / f"title_page_test_{i}_{test_case['name'].replace(' ', '_')}.pdf"
            
            with open(output_path, 'wb') as f:
                f.write(title_buffer.getvalue())
            
            print(f"‚úÖ {test_case['name']}: {output_path.name}")
            
        except Exception as e:
            print(f"‚ùå {test_case['name']}: –æ—à–∏–±–∫–∞ - {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É tests –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    tests_dir = Path("tests")
    tests_dir.mkdir(exist_ok=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    success = test_title_page_generation()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    test_different_user_names()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ tests/")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
    
    return success


if __name__ == "__main__":
    main() 