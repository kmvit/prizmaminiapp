#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ special_offer_started_at –≤ —Ç–∞–±–ª–∏—Ü—É users –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.database.database import engine
from sqlalchemy import text

async def add_timer_column_server():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞–π–º–µ—Ä–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    
    print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ special_offer_started_at –≤ —Ç–∞–±–ª–∏—Ü—É users –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    print("=" * 70)
    
    try:
        async with engine.begin() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞
            result = await conn.execute(text("PRAGMA table_info(users)"))
            columns = result.fetchall()
            column_names = [col[1] for col in columns]
            
            print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {column_names}")
            
            if 'special_offer_started_at' in column_names:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ special_offer_started_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É
            print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ special_offer_started_at...")
            await conn.execute(text("""
                ALTER TABLE users 
                ADD COLUMN special_offer_started_at DATETIME
            """))
            
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = await conn.execute(text("PRAGMA table_info(users)"))
            columns = result.fetchall()
            column_names = [col[1] for col in columns]
            
            print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {column_names}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞
            if 'special_offer_started_at' in column_names:
                print("üéâ –ö–æ–ª–æ–Ω–∫–∞ special_offer_started_at —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
            else:
                print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(add_timer_column_server())
